<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="mscorlib" name="mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" />
  <data name="FortniteClient_Win64_Shipping_BE" type="System.Byte[], mscorlib">
    <value>
        TVqQAAMAAAAEAAAA//8AALgAAAAAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        gAAAAA4fug4AtAnNIbgBTM0hVGhpcyBwcm9ncmFtIGNhbm5vdCBiZSBydW4gaW4gRE9TIG1vZGUuDQ0K
        JAAAAAAAAABQRQAATAEDAOVIXPEAAAAAAAAAAOAAIgALATAAAAgAAAAKAAAAAAAAxicAAAAgAAAAQAAA
        AABAAAAgAAAAAgAABAAAAAAAAAAGAAAAAAAAAACAAAAAAgAAAAAAAAMAYIUAABAAABAAAAAAEAAAEAAA
        AAAAABAAAAAAAAAAAAAAAHEnAABPAAAAAEAAABQGAAAAAAAAAAAAAAAAAAAAAAAAAGAAAAwAAAC4JgAA
        OAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAIAAACAAAAAAAAAAAAAAA
        CCAAAEgAAAAAAAAAAAAAAC50ZXh0AAAAzAcAAAAgAAAACAAAAAIAAAAAAAAAAAAAAAAAACAAAGAucnNy
        YwAAABQGAAAAQAAAAAgAAAAKAAAAAAAAAAAAAAAAAABAAABALnJlbG9jAAAMAAAAAGAAAAACAAAAEgAA
        AAAAAAAAAAAAAAAAQAAAQgAAAAAAAAAAAAAAAAAAAAClJwAAAAAAAEgAAAACAAUAeCAAAEAGAAADAAIA
        AQAABgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABMwAQAUAAAA
        AQAAERUoDwAACm8QAAAKChIAKBEAAAoqHgIoEgAACipCU0pCAQABAAAAAAAMAAAAdjQuMC4zMDMxOQAA
        AAAFAGwAAADkAQAAI34AAFACAADAAgAAI1N0cmluZ3MAAAAAEAUAAAQAAAAjVVMAFAUAABAAAAAjR1VJ
        RAAAACQFAAAcAQAAI0Jsb2IAAAAAAAAAAgAAAUcVAgAJAAAAAPoBMwAWAAABAAAAEgAAAAIAAAACAAAA
        AQAAABIAAAAOAAAAAQAAAAEAAAABAAAAAAClAQEAAAAAAAYAGgFeAgYAhwFeAgYATgAsAg8AfgIAAAYA
        dgD9AQYA/QD9AQYA3gD9AQYAbgH9AQYAOgH9AQYAUwH9AQYAjQD9AQYAYgA/AgYAQAA/AgYAwQD9AQYA
        qADKAQYAqQLxAQYADwJeAgYA5AGSAgAAAAANAAAAAAABAAEAAAAQAOkBAQBBAAEAAQBQIAAAAACRAPgB
        MwABAHAgAAAAAIYYJgIGAAIAAAABAI0CCQAmAgEAEQAmAgYAGQAmAgoAKQAmAhAAMQAmAhAAOQAmAhAA
        QQAmAhAASQAmAhAAUQAmAhAAWQAmAhAAYQAmAhUAaQAmAhAAcQAmAhAAeQAmAhAAkQC6Ah8AkQAbAiUA
        iQCwAgYAgQAmAgYALgALADkALgATAEIALgAbAGEALgAjAGoALgArAHsALgAzAHsALgA7AHsALgBDAGoA
        LgBLAIEALgBTAHsALgBbAHsALgBjAJkALgBrAMMALgBzANAAGgAEgAAAAQAAAAAAAAAAAAAAAAAWAAAA
        BAAAAAAAAAAAAAAAKgA3AAAAAAAAAAAAAENvbnNvbGVBcHAxADxNb2R1bGU+AEZvcnRuaXRlQ2xpZW50
        LVdpbjY0LVNoaXBwaW5nX0JFAG1zY29ybGliAEd1aWRBdHRyaWJ1dGUARGVidWdnYWJsZUF0dHJpYnV0
        ZQBDb21WaXNpYmxlQXR0cmlidXRlAEFzc2VtYmx5VGl0bGVBdHRyaWJ1dGUAQXNzZW1ibHlUcmFkZW1h
        cmtBdHRyaWJ1dGUAVGFyZ2V0RnJhbWV3b3JrQXR0cmlidXRlAEFzc2VtYmx5RmlsZVZlcnNpb25BdHRy
        aWJ1dGUAQXNzZW1ibHlDb25maWd1cmF0aW9uQXR0cmlidXRlAEFzc2VtYmx5RGVzY3JpcHRpb25BdHRy
        aWJ1dGUAQ29tcGlsYXRpb25SZWxheGF0aW9uc0F0dHJpYnV0ZQBBc3NlbWJseVByb2R1Y3RBdHRyaWJ1
        dGUAQXNzZW1ibHlDb3B5cmlnaHRBdHRyaWJ1dGUAQXNzZW1ibHlDb21wYW55QXR0cmlidXRlAFJ1bnRp
        bWVDb21wYXRpYmlsaXR5QXR0cmlidXRlAEZvcnRuaXRlQ2xpZW50LVdpbjY0LVNoaXBwaW5nX0JFLmV4
        ZQBTeXN0ZW0uUnVudGltZS5WZXJzaW9uaW5nAFRhc2sAUHJvZ3JhbQBTeXN0ZW0ATWFpbgBTeXN0ZW0u
        UmVmbGVjdGlvbgBUYXNrQXdhaXRlcgBHZXRBd2FpdGVyAC5jdG9yAFN5c3RlbS5EaWFnbm9zdGljcwBT
        eXN0ZW0uUnVudGltZS5JbnRlcm9wU2VydmljZXMAU3lzdGVtLlJ1bnRpbWUuQ29tcGlsZXJTZXJ2aWNl
        cwBEZWJ1Z2dpbmdNb2RlcwBhcmdzAFN5c3RlbS5UaHJlYWRpbmcuVGFza3MAT2JqZWN0AEdldFJlc3Vs
        dABEZWxheQAAAAAAkMWzU40C3ka/4KJtUAQxiQAEIAEBCAMgAAEFIAEBEREEIAEBDgQgAQECBAcBEUUF
        AAESSQgEIAARRQi3elxWGTTgiQUAAQEdDggBAAgAAAAAAB4BAAEAVAIWV3JhcE5vbkV4Y2VwdGlvblRo
        cm93cwEIAQACAAAAAAAQAQALQ29uc29sZUFwcDEAAAUBAAAAABcBABJDb3B5cmlnaHQgwqkgIDIwMjEA
        ACkBACQxNTA3NGY4Yy02ZDhhLTQ1Y2ItOTQzMy0zNDQ1YTVmMTgxNDUAAAwBAAcxLjAuMC4wAABJAQAa
        Lk5FVEZyYW1ld29yayxWZXJzaW9uPXY0LjgBAFQOFEZyYW1ld29ya0Rpc3BsYXlOYW1lEi5ORVQgRnJh
        bWV3b3JrIDQuOAAAAAAAAFsQRLMAAAAAAgAAAIEAAADwJgAA8AgAAAAAAAAAAAAAAAAAABAAAAAAAAAA
        AAAAAAAAAABSU0RTrzpulw+t30qOkMplOCZZLQEAAABDOlxVc2Vyc1xEYXJrYmxhZGVcc291cmNlXHJl
        cG9zXENvbnNvbGVBcHAxXENvbnNvbGVBcHAxXG9ialxSZWxlYXNlXEZvcnRuaXRlQ2xpZW50LVdpbjY0
        LVNoaXBwaW5nX0JFLnBkYgCZJwAAAAAAAAAAAACzJwAAACAAAAAAAAAAAAAAAAAAAAAAAAAAAAAApScA
        AAAAAAAAAAAAAABfQ29yRXhlTWFpbgBtc2NvcmVlLmRsbAAAAAAAAAAA/yUAIEAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAgAQAAAA
        IAAAgBgAAABQAACAAAAAAAAAAAAAAAAAAAABAAEAAAA4AACAAAAAAAAAAAAAAAAAAAABAAAAAACAAAAA
        AAAAAAAAAAAAAAAAAAABAAEAAABoAACAAAAAAAAAAAAAAAAAAAABAAAAAAAUBAAAkEAAAIQDAAAAAAAA
        AAAAAIQDNAAAAFYAUwBfAFYARQBSAFMASQBPAE4AXwBJAE4ARgBPAAAAAAC9BO/+AAABAAAAAQAAAAAA
        AAABAAAAAAA/AAAAAAAAAAQAAAABAAAAAAAAAAAAAAAAAAAARAAAAAEAVgBhAHIARgBpAGwAZQBJAG4A
        ZgBvAAAAAAAkAAQAAABUAHIAYQBuAHMAbABhAHQAaQBvAG4AAAAAAAAAsATkAgAAAQBTAHQAcgBpAG4A
        ZwBGAGkAbABlAEkAbgBmAG8AAADAAgAAAQAwADAAMAAwADAANABiADAAAAAaAAEAAQBDAG8AbQBtAGUA
        bgB0AHMAAAAAAAAAIgABAAEAQwBvAG0AcABhAG4AeQBOAGEAbQBlAAAAAAAAAAAAQAAMAAEARgBpAGwA
        ZQBEAGUAcwBjAHIAaQBwAHQAaQBvAG4AAAAAAEMAbwBuAHMAbwBsAGUAQQBwAHAAMQAAADAACAABAEYA
        aQBsAGUAVgBlAHIAcwBpAG8AbgAAAAAAMQAuADAALgAwAC4AMAAAAGoAJQABAEkAbgB0AGUAcgBuAGEA
        bABOAGEAbQBlAAAARgBvAHIAdABuAGkAdABlAEMAbABpAGUAbgB0AC0AVwBpAG4ANgA0AC0AUwBoAGkA
        cABwAGkAbgBnAF8AQgBFAC4AZQB4AGUAAAAAAEgAEgABAEwAZQBnAGEAbABDAG8AcAB5AHIAaQBnAGgA
        dAAAAEMAbwBwAHkAcgBpAGcAaAB0ACAAqQAgACAAMgAwADIAMQAAACoAAQABAEwAZQBnAGEAbABUAHIA
        YQBkAGUAbQBhAHIAawBzAAAAAAAAAAAAcgAlAAEATwByAGkAZwBpAG4AYQBsAEYAaQBsAGUAbgBhAG0A
        ZQAAAEYAbwByAHQAbgBpAHQAZQBDAGwAaQBlAG4AdAAtAFcAaQBuADYANAAtAFMAaABpAHAAcABpAG4A
        ZwBfAEIARQAuAGUAeABlAAAAAAA4AAwAAQBQAHIAbwBkAHUAYwB0AE4AYQBtAGUAAAAAAEMAbwBuAHMA
        bwBsAGUAQQBwAHAAMQAAADQACAABAFAAcgBvAGQAdQBjAHQAVgBlAHIAcwBpAG8AbgAAADEALgAwAC4A
        MAAuADAAAAA4AAgAAQBBAHMAcwBlAG0AYgBsAHkAIABWAGUAcgBzAGkAbwBuAAAAMQAuADAALgAwAC4A
        MAAAACREAADqAQAAAAAAAAAAAADvu788P3htbCB2ZXJzaW9uPSIxLjAiIGVuY29kaW5nPSJVVEYtOCIg
        c3RhbmRhbG9uZT0ieWVzIj8+DQoNCjxhc3NlbWJseSB4bWxucz0idXJuOnNjaGVtYXMtbWljcm9zb2Z0
        LWNvbTphc20udjEiIG1hbmlmZXN0VmVyc2lvbj0iMS4wIj4NCiAgPGFzc2VtYmx5SWRlbnRpdHkgdmVy
        c2lvbj0iMS4wLjAuMCIgbmFtZT0iTXlBcHBsaWNhdGlvbi5hcHAiLz4NCiAgPHRydXN0SW5mbyB4bWxu
        cz0idXJuOnNjaGVtYXMtbWljcm9zb2Z0LWNvbTphc20udjIiPg0KICAgIDxzZWN1cml0eT4NCiAgICAg
        IDxyZXF1ZXN0ZWRQcml2aWxlZ2VzIHhtbG5zPSJ1cm46c2NoZW1hcy1taWNyb3NvZnQtY29tOmFzbS52
        MyI+DQogICAgICAgIDxyZXF1ZXN0ZWRFeGVjdXRpb25MZXZlbCBsZXZlbD0iYXNJbnZva2VyIiB1aUFj
        Y2Vzcz0iZmFsc2UiLz4NCiAgICAgIDwvcmVxdWVzdGVkUHJpdmlsZWdlcz4NCiAgICA8L3NlY3VyaXR5
        Pg0KICA8L3RydXN0SW5mbz4NCjwvYXNzZW1ibHk+AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACAAAAwAAADINwAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAA=
</value>
  </data>
  <data name="FortniteLauncher" type="System.Byte[], mscorlib">
    <value>
        TVqQAAMAAAAEAAAA//8AALgAAAAAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        gAAAAA4fug4AtAnNIbgBTM0hVGhpcyBwcm9ncmFtIGNhbm5vdCBiZSBydW4gaW4gRE9TIG1vZGUuDQ0K
        JAAAAAAAAABQRQAATAEDAONvxMgAAAAAAAAAAOAAIgALATAAAAgAAAAIAAAAAAAAlicAAAAgAAAAQAAA
        AABAAAAgAAAAAgAABAAAAAAAAAAGAAAAAAAAAACAAAAAAgAAAAAAAAMAYIUAABAAABAAAAAAEAAAEAAA
        AAAAABAAAAAAAAAAAAAAAEEnAABPAAAAAEAAANQFAAAAAAAAAAAAAAAAAAAAAAAAAGAAAAwAAACYJgAA
        OAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAIAAACAAAAAAAAAAAAAAA
        CCAAAEgAAAAAAAAAAAAAAC50ZXh0AAAAnAcAAAAgAAAACAAAAAIAAAAAAAAAAAAAAAAAACAAAGAucnNy
        YwAAANQFAAAAQAAAAAYAAAAKAAAAAAAAAAAAAAAAAABAAABALnJlbG9jAAAMAAAAAGAAAAACAAAAEAAA
        AAAAAAAAAAAAAAAAQAAAQgAAAAAAAAAAAAAAAAAAAAB1JwAAAAAAAEgAAAACAAUAeCAAACAGAAADAAIA
        AQAABgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABMwAQAUAAAA
        AQAAERUoDwAACm8QAAAKChIAKBEAAAoqHgIoEgAACipCU0pCAQABAAAAAAAMAAAAdjQuMC4zMDMxOQAA
        AAAFAGwAAADkAQAAI34AAFACAACgAgAAI1N0cmluZ3MAAAAA8AQAAAQAAAAjVVMA9AQAABAAAAAjR1VJ
        RAAAAAQFAAAcAQAAI0Jsb2IAAAAAAAAAAgAAAUcVAgAJAAAAAPoBMwAWAAABAAAAEgAAAAIAAAACAAAA
        AQAAABIAAAAOAAAAAQAAAAEAAAABAAAAAACEAQEAAAAAAAYA+QA+AgYAZgE+AgYALQAMAg8AXgIAAAYA
        VQDMAQYA3ADMAQYAvQDMAQYATQHMAQYAGQHMAQYAMgHMAQYAbADMAQYAQQAfAgYAHwAfAgYAoADMAQYA
        hwCZAQYAiQLAAQYA7wE+AgYAswFyAgAAAAANAAAAAAABAAEAAAAQALgBAQBBAAEAAQBQIAAAAACRAMcB
        MwABAHAgAAAAAIYYBgIGAAIAAAABAG0CCQAGAgEAEQAGAgYAGQAGAgoAKQAGAhAAMQAGAhAAOQAGAhAA
        QQAGAhAASQAGAhAAUQAGAhAAWQAGAhAAYQAGAhUAaQAGAhAAcQAGAhAAeQAGAhAAkQCaAh8AkQD7ASUA
        iQCQAgYAgQAGAgYALgALADkALgATAEIALgAbAGEALgAjAGoALgArAHsALgAzAHsALgA7AHsALgBDAGoA
        LgBLAIEALgBTAHsALgBbAHsALgBjAJkALgBrAMMALgBzANAAGgAEgAAAAQAAAAAAAAAAAAAAAADeAQAA
        BAAAAAAAAAAAAAAAKgAWAAAAAAAAAAAAAENvbnNvbGVBcHAxADxNb2R1bGU+AG1zY29ybGliAEd1aWRB
        dHRyaWJ1dGUARGVidWdnYWJsZUF0dHJpYnV0ZQBDb21WaXNpYmxlQXR0cmlidXRlAEFzc2VtYmx5VGl0
        bGVBdHRyaWJ1dGUAQXNzZW1ibHlUcmFkZW1hcmtBdHRyaWJ1dGUAVGFyZ2V0RnJhbWV3b3JrQXR0cmli
        dXRlAEFzc2VtYmx5RmlsZVZlcnNpb25BdHRyaWJ1dGUAQXNzZW1ibHlDb25maWd1cmF0aW9uQXR0cmli
        dXRlAEFzc2VtYmx5RGVzY3JpcHRpb25BdHRyaWJ1dGUAQ29tcGlsYXRpb25SZWxheGF0aW9uc0F0dHJp
        YnV0ZQBBc3NlbWJseVByb2R1Y3RBdHRyaWJ1dGUAQXNzZW1ibHlDb3B5cmlnaHRBdHRyaWJ1dGUAQXNz
        ZW1ibHlDb21wYW55QXR0cmlidXRlAFJ1bnRpbWVDb21wYXRpYmlsaXR5QXR0cmlidXRlAEZvcnRuaXRl
        TGF1bmNoZXIuZXhlAFN5c3RlbS5SdW50aW1lLlZlcnNpb25pbmcAVGFzawBQcm9ncmFtAFN5c3RlbQBN
        YWluAFN5c3RlbS5SZWZsZWN0aW9uAEZvcnRuaXRlTGF1bmNoZXIAVGFza0F3YWl0ZXIAR2V0QXdhaXRl
        cgAuY3RvcgBTeXN0ZW0uRGlhZ25vc3RpY3MAU3lzdGVtLlJ1bnRpbWUuSW50ZXJvcFNlcnZpY2VzAFN5
        c3RlbS5SdW50aW1lLkNvbXBpbGVyU2VydmljZXMARGVidWdnaW5nTW9kZXMAYXJncwBTeXN0ZW0uVGhy
        ZWFkaW5nLlRhc2tzAE9iamVjdABHZXRSZXN1bHQARGVsYXkAAAAAAAAkzAsqTDdPo+kBSDTKgm0ABCAB
        AQgDIAABBSABARERBCABAQ4EIAEBAgQHARFFBQABEkkIBCAAEUUIt3pcVhk04IkFAAEBHQ4IAQAIAAAA
        AAAeAQABAFQCFldyYXBOb25FeGNlcHRpb25UaHJvd3MBCAEAAgAAAAAAEAEAC0NvbnNvbGVBcHAxAAAF
        AQAAAAAXAQASQ29weXJpZ2h0IMKpICAyMDIxAAApAQAkMTUwNzRmOGMtNmQ4YS00NWNiLTk0MzMtMzQ0
        NWE1ZjE4MTQ1AAAMAQAHMS4wLjAuMAAASQEAGi5ORVRGcmFtZXdvcmssVmVyc2lvbj12NC44AQBUDhRG
        cmFtZXdvcmtEaXNwbGF5TmFtZRIuTkVUIEZyYW1ld29yayA0LjgAAAAAAABbEESzAAAAAAIAAABxAAAA
        0CYAANAIAAAAAAAAAAAAAAAAAAAQAAAAAAAAAAAAAAAAAAAAUlNEU686bpcPrd9KjpDKZTgmWS0BAAAA
        QzpcVXNlcnNcRGFya2JsYWRlXHNvdXJjZVxyZXBvc1xDb25zb2xlQXBwMVxDb25zb2xlQXBwMVxvYmpc
        UmVsZWFzZVxGb3J0bml0ZUxhdW5jaGVyLnBkYgBpJwAAAAAAAAAAAACDJwAAACAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAdScAAAAAAAAAAAAAAABfQ29yRXhlTWFpbgBtc2NvcmVlLmRsbAAAAAAAAAAA/yUAIEAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAgAQAAAA
        IAAAgBgAAABQAACAAAAAAAAAAAAAAAAAAAABAAEAAAA4AACAAAAAAAAAAAAAAAAAAAABAAAAAACAAAAA
        AAAAAAAAAAAAAAAAAAABAAEAAABoAACAAAAAAAAAAAAAAAAAAAABAAAAAADUAwAAkEAAAEQDAAAAAAAA
        AAAAAEQDNAAAAFYAUwBfAFYARQBSAFMASQBPAE4AXwBJAE4ARgBPAAAAAAC9BO/+AAABAAAAAQAAAAAA
        AAABAAAAAAA/AAAAAAAAAAQAAAABAAAAAAAAAAAAAAAAAAAARAAAAAEAVgBhAHIARgBpAGwAZQBJAG4A
        ZgBvAAAAAAAkAAQAAABUAHIAYQBuAHMAbABhAHQAaQBvAG4AAAAAAAAAsASkAgAAAQBTAHQAcgBpAG4A
        ZwBGAGkAbABlAEkAbgBmAG8AAACAAgAAAQAwADAAMAAwADAANABiADAAAAAaAAEAAQBDAG8AbQBtAGUA
        bgB0AHMAAAAAAAAAIgABAAEAQwBvAG0AcABhAG4AeQBOAGEAbQBlAAAAAAAAAAAAQAAMAAEARgBpAGwA
        ZQBEAGUAcwBjAHIAaQBwAHQAaQBvAG4AAAAAAEMAbwBuAHMAbwBsAGUAQQBwAHAAMQAAADAACAABAEYA
        aQBsAGUAVgBlAHIAcwBpAG8AbgAAAAAAMQAuADAALgAwAC4AMAAAAEoAFQABAEkAbgB0AGUAcgBuAGEA
        bABOAGEAbQBlAAAARgBvAHIAdABuAGkAdABlAEwAYQB1AG4AYwBoAGUAcgAuAGUAeABlAAAAAABIABIA
        AQBMAGUAZwBhAGwAQwBvAHAAeQByAGkAZwBoAHQAAABDAG8AcAB5AHIAaQBnAGgAdAAgAKkAIAAgADIA
        MAAyADEAAAAqAAEAAQBMAGUAZwBhAGwAVAByAGEAZABlAG0AYQByAGsAcwAAAAAAAAAAAFIAFQABAE8A
        cgBpAGcAaQBuAGEAbABGAGkAbABlAG4AYQBtAGUAAABGAG8AcgB0AG4AaQB0AGUATABhAHUAbgBjAGgA
        ZQByAC4AZQB4AGUAAAAAADgADAABAFAAcgBvAGQAdQBjAHQATgBhAG0AZQAAAAAAQwBvAG4AcwBvAGwA
        ZQBBAHAAcAAxAAAANAAIAAEAUAByAG8AZAB1AGMAdABWAGUAcgBzAGkAbwBuAAAAMQAuADAALgAwAC4A
        MAAAADgACAABAEEAcwBzAGUAbQBiAGwAeQAgAFYAZQByAHMAaQBvAG4AAAAxAC4AMAAuADAALgAwAAAA
        5EMAAOoBAAAAAAAAAAAAAO+7vzw/eG1sIHZlcnNpb249IjEuMCIgZW5jb2Rpbmc9IlVURi04IiBzdGFu
        ZGFsb25lPSJ5ZXMiPz4NCg0KPGFzc2VtYmx5IHhtbG5zPSJ1cm46c2NoZW1hcy1taWNyb3NvZnQtY29t
        OmFzbS52MSIgbWFuaWZlc3RWZXJzaW9uPSIxLjAiPg0KICA8YXNzZW1ibHlJZGVudGl0eSB2ZXJzaW9u
        PSIxLjAuMC4wIiBuYW1lPSJNeUFwcGxpY2F0aW9uLmFwcCIvPg0KICA8dHJ1c3RJbmZvIHhtbG5zPSJ1
        cm46c2NoZW1hcy1taWNyb3NvZnQtY29tOmFzbS52MiI+DQogICAgPHNlY3VyaXR5Pg0KICAgICAgPHJl
        cXVlc3RlZFByaXZpbGVnZXMgeG1sbnM9InVybjpzY2hlbWFzLW1pY3Jvc29mdC1jb206YXNtLnYzIj4N
        CiAgICAgICAgPHJlcXVlc3RlZEV4ZWN1dGlvbkxldmVsIGxldmVsPSJhc0ludm9rZXIiIHVpQWNjZXNz
        PSJmYWxzZSIvPg0KICAgICAgPC9yZXF1ZXN0ZWRQcml2aWxlZ2VzPg0KICAgIDwvc2VjdXJpdHk+DQog
        IDwvdHJ1c3RJbmZvPg0KPC9hc3NlbWJseT4AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAgAAAMAAAAmDcAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
</value>
  </data>
</root>